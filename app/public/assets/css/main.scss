
// Import CSS3 fonts
@import "fonts"; $fontStack: "Sinkin Sans", Arial, sans-serif;

$dark: #121212;					// Darkest grey for backgrounds. Used in chat and textareas
$grey: #222;						// Middle grey for backgrounds. This is used in the main game area
$grey70: rgba(34,34,34,0.7);		// Partially transparent middle grey
$grey90: rgba(34,34,34,0.7);		// Partially transparent middle grey
$grey2: #444;						// Lightest grey for backgrounds and some low-importance fonts. Used in the sidebar
$beige: #F6F3E3;					// Beige color, used for game settings panel, and possibly popups/tooltips in the future
$beige2: #D9D8D0;				// Alternate beige
$darkTransp1: rgba(0, 0, 0, 0.1);
$darkTransp2: rgba(0, 0, 0, 0.2);
$darkTransp3: rgba(0, 0, 0, 0.3);
$darkTransp5: rgba(0, 0, 0, 0.5);
$darkTransp7: rgba(0, 0, 0, 0.7);
$darkTransp8: rgba(0, 0, 0, 0.8);

$white: #FFF;						// Plain while color, mostly for text
$white10: rgba(255,255,255,0.1);
$white20: rgba(255,255,255,0.2);
$white30: rgba(255,255,255,0.3);
$white50: rgba(255,255,255,0.5);	// Transparent white color
$white75: rgba(255,255,255,0.75);// Transparent white color
$frost: #C6DEE9;					// Some alternate for white
$blue: #2FB4F0;					// Unused currently
$green: #c2e436;
$grey3: #666;						// Color for some low-importance fonts

$teal: #2C85A5;					// Background color for inactive or static teal elements
// $teal: #5396B5;
$teal30: rgba(44, 133, 165, 0.3);	// Transparent version of teal color
$tealLit: #5BBFDF;					// Backgorund for hovered / active teal elements
$orange: #E68729;				// Background color for inactive or static orange elements
$orangeLit: #FCAC36;				// Background color for hovered / active orange buttons or elements

// Gradient backgrounds!
$darkGradientPopup: linear-gradient(to bottom, #333 0%, #242424 30%, #242424 100%);
$darkGradientSidebar: linear-gradient(to bottom, #333 200px, #242424 400px, #242424 100%);
// $tealGradient: linear-gradient(to bottom, $teal 0%, #1E79A0 50%, #1C7595 100%);
$tealGradient: linear-gradient(to bottom, #4F9FBC 0%, $teal 100%);

$breakTablet: 1150px;			// Break point for tablet version
$breakTabletSmall: 930px;	// Break point for smaller tablet version
$breakMobile: 680px;			// Break point for full mobile version

$sidebarWidth: 270px;			// Overall Sidebar width
$sidebarWidthMobile: 42px;		// Sidebar width on mobile
$gameInfoHeight: 200px;			// Height of the top left game info area
$gameInfoHeightMobile: 42px;	// Height of the top left game info area on mobile, before it's opened

$sidebarPadding: 40px;			// Padding for elements in the sidebar
$sidebarPaddingMobile: 10px;		// Padding for elements in the sidebar on mobile

$sidebarControlsHeight: 50px;			// Sidebar controls height
$sidebarControlsButtonPadding: 15px 18px;

$inputHeight: 52px;				// Height for text inputs in the game panel as well as the chat area

$gameEdgePadding: 0;			// Padding around the edge of the game panel

$foundTopPadding: 70px;			// Padding above the found words area, used to prevent the words from scrolling too far over the user data

$gameHeadingsFontWeight: 200;	// The font weight for h2 headings on leaderboard, in the game area, etc.

$boardSize: 300px;

$cornerOffset: 20px;				// How much absolute positioned elements at the screen corners are offset from the edge

// Import resets and global element styles
@import "common";

// Popup css
@import "popup";

// Options
@import "ui-options";

// Scrollbar CSS
@import "trackpad-scroll-emulator";

// Input mixin
@mixin textInput( $fontSize, $pad ) {
	width: 100%;
	height: $inputHeight;
	border-radius: 0; border: 0;
	border-top: 1px solid $grey;
	background: $dark;
	color: $grey2;
	font-style: italic;
	padding: $pad 25px 0 25px;
	font-size: $fontSize;
}

@mixin arrowDown( $height, $width, $color ) {
	display: block;
	width: 0; height: 0; overflow: hidden;
	border-top: $height solid $color;
	border-right: $width/2 solid transparent;
	border-left: $width/2 solid transparent;
	border-bottom: 0;
	transform: scale(0.999);
}

.button {
	display: inline-block;
	font-weight: 300;
	letter-spacing: -0.2px;
	margin: 10px auto;
	border: 1px solid transparent;
	background: $white10;
	padding: 11px 22px 8px;
	transition: background 0.3s, border 0.3s;
	color: $white;
	svg {
		width: 22px; height: 22px;
		position: relative;
		margin-top: -100px;
		top: 4px;
		left: -8px;
		fill: $white;
	}
}
.button:hover {
	opacity: 1;
	background: $white30;
	// border: 1px solid $frost;
}

#webgl-background {
	width: 100%; height: 100%;
	position: absolute;
	top: 0; left: 0;
	canvas {
		width: 100%; height: 100%;
	}
}

.board {
	// opacity: 0.5;
	// background: $darkTransp1;
	transition: opacity 0.3s;
	width: $boardSize;
	height: $boardSize;
	min-height: $boardSize;
	margin: 0 auto;
	// box-shadow: 0 0 50px $darkTransp3;
	display: block;
	position: relative;
	.row {
		margin-top:-1px;
		height: 25%;
		display: block;
		white-space: nowrap;
	}
	.row.alt {
		margin-top: 0;
	}
	.cell {
		// background: rgba(30, 30, 30, 0.8);
		background: $grey;
		background: transparent;
		margin: 0 -1px -1px 0;
		height: 100%;
		width: 25%;
		border: 1px solid $white10;
		display: inline-block; vertical-align: top;
		text-align: center;
		transition: background 0.2s, border 0.2s;
		font: 400 40px/40px $fontStack;
		position: relative;
		.letter {
			width: 100%;
			position: absolute;
			top: 50%;
			transform: translateY(-50%);
		}
	}
	.cell.alt {
		background: $darkTransp3;
		margin: 0;
		border: none;
	}
	.cell.on {
		transition: none;
		border: 1px solid $teal;
		background: $teal;
	}
	.cell.partial {
		transition: none;
		border: 1px solid $teal30;
		background: $teal30;
	}
}
.board.active {
	opacity: 1.0;
}

@import "mainpage.scss";

.share {
	z-index: 400;
	position: absolute;
	transition: left 0.2s, opacity 0.3s;
	bottom: $cornerOffset * 0.7; left: $cornerOffset;
	opacity: 0.3;
	* {
		color: $white50;
		font-size: 13px;
	}
}
.share:hover {
	opacity: 1;
}

.logo-small {
	position: absolute;
	transition: left 0.2s;
	margin-top: -3px;
	top: $cornerOffset; left: $cornerOffset;
	z-index: 400;
	text-align: center;
	span {
		text-transform: uppercase;
		color: $orange;
		display: inline-block; vertical-align: top;
		width: 12px; height: 20px;
		text-align: center;
		margin-left: 2px;
	}
	span.inverse {
		background: $orange;
		color: $grey;
		width: 20px;
	}
	span.version {
		width: auto;
		position: absolute;
		top: 22px; left: 0;
		color: $grey2;
		font-size: 12px;
		text-transform: lowercase;
	}
	a {
		display: inline-block;
		width: 100%;
		transition: background 0.3s;
		height: 58px;
		padding: 7px 0;
		// border-radius: 3px;
	}
	a:hover {
		background: $darkTransp1;
		opacity: 1;
	}
}

.logo-small.white {
	position: static;
	margin-bottom: 15px;
	span {
		color: $white;
	}
	span.inverse {
		background: $white;
		color: $teal;
	}
}

.game .logo-small, .game .share  {
	left: 60px + $sidebarWidth;
	@media ( max-width: $breakTablet ) {
		left: 60px + $sidebarWidthMobile;
	}
}

.playercard {
	z-index: 500;
	position: absolute;
	top: 0;
	right: 0px;
	padding: $cornerOffset;
	// border-radius: 0 0 0 20px;
	text-align: right;
	// background: $grey;
	// box-shadow: 0 0 20px 5px $grey70;
	padding-right: 50px;
	padding-left: $cornerOffset + 30px;
	overflow: hidden;
	transition: background 0.3s;
	@media ( max-width: $breakMobile ) {
		display: none;
	}
	p {
		color: $white;
		font-weight: 300;
	}
	p, a {
		font-size: 16px;
		line-height: 22px;
	}
	h3 {
		margin-top: 3px;
		font-size: 22px;
	}
	a { 
		display: block;
		padding: 4px 8px;
		width: 100%;
	}
	input {
		display: block;
		width: 150px;
		padding: 2px 6px;
		font-size: 12px;
		text-align: center;
		background: $darkTransp3;
		margin: 5px 0;
		border: 0;
	}
	.expand {
		position: relative;
		right: -10px;
		transition: height 0.2s;
		height: 0;
		padding: 10px 0 0 0;
		overflow: hidden;
		width: 100%;
	}
}
.playercard:hover {
	cursor: default;
	background: $darkTransp5;
	p {
		color: $white;
	}
	.expand {
		height: 100px;
	}
}
.playercard::after {
	content: "";
	position: absolute;
	top: $cornerOffset + 30; right: $cornerOffset + 5;
	@include arrowDown( 8px, 15px, $white20 );
}

// Sidebar elements
.game-info, .sidebar {
	position: fixed;
	left: 0; top: 0;
	border-right: 1px solid #333;
	width: $sidebarWidth;
	@media ( max-width: $breakTablet ) {
		width: $sidebarWidthMobile;
	}
}
.game-info {
	// border-bottom: 1px solid $white20;
	z-index: 400;
	background: $tealGradient;
	overflow: hidden;
	transition: width 0.2s, height 0.2s;
	height: $gameInfoHeight;
	padding: 35px $sidebarPadding 30px $sidebarPadding;
	@media ( max-width: $breakTablet ) {
		height: $gameInfoHeightMobile;
		padding: $sidebarPaddingMobile;
	}
	// Children
	p.label {
		font-size: 14px;
	}
	h2 {
		font: 300 24px/24px $fontStack;
		letter-spacing: -1px;
		overflow: hidden;
		width: 210px;
		max-height: 48px;
	}	
	.menu {
		white-space: nowrap;
		margin: 10px 0 0;
		// position: absolute;
		// bottom: 16px;
	 	a {
			display: block;
			padding: 8px 27px;
			// margin-top: -8px;
			font-size: 15px;
			// letter-spacing: -0.2px;
			font-weight: 200;
		}
		li {
			// height: 24px;
			background: $white20;
			border-radius: 3px;
			margin-right: 6px;
			transition: background 0.25s;
			// border-right: 1px solid rgba(255,255,255,0.3);
		}
		li:hover {
			background: $white50;
		}
	}
	.desktop-view {
		@media ( max-width: $breakTablet ) {
			display: none;
		}
	}
	.mobile-view {
		@media ( min-width: $breakTablet ) {
			display: none;
		}
	}
}
.sidebar {
	transition: width 0.2s;
	height: 100%;
	overflow: hidden;
	background: $grey;
	background: $darkGradientSidebar;
	transition: padding 0.2s;
	padding-top: $gameInfoHeight;
	@media ( max-width: $breakTablet ) {
		padding-top: $gameInfoHeightMobile;
	}
	padding-bottom: $sidebarControlsHeight;
	// Upper contains the leaderboard as well as the game settings
	.upper {
		position: relative;
		height: 100%;
		// overflow: hidden;
		white-space: nowrap;
		left: 0px;
		transition: left 0.2s;
	}
	.controls {
		position: fixed;
		bottom: 0;
		height: $sidebarControlsHeight;
		width: $sidebarWidth;
		background: #333;
		// padding-bottom: $inputHeight;
		@media ( max-width: $breakTablet ) {
			display: none;
		}
		text-align: center;
		ul li a {
			font-size: 14px;
			color: $white20;
			display: block;
			cursor: pointer;
			height: $sidebarControlsHeight;
			padding: $sidebarControlsButtonPadding;
		}
		ul li a svg { 
			margin-top: -100px;
			position: relative;
			top: 5px; left: -5px;
			margin-left: -20px;
			width: 20px; height: 20px;
			transition: fill 0.3s;
			fill: $white20;
		}
		ul li a:hover { opacity: 1; color: $tealLit; }
		ul li a:hover svg { fill: $tealLit; }
		ul li a.active { color: $tealLit; }
		ul li a.active svg { fill: $tealLit; }
		.marker {
			position: absolute;
			bottom: 0;
			height: 4px;
			background: $tealLit;
			width: 78px;
			left: 20px;
			transition: left 0.2s, width 0.2s;
		}
	}
}
.sidebar .upper .panel {
	vertical-align: top;
	position: relative;
	white-space: normal;
	display: inline-block;
	margin-right: -5px;
	width: 100%;
	overflow-x: hidden;
	overflow-y: auto;
	@media ( max-width: $breakTablet ) {
		overflow-y: hidden;
	}
	height: 100%;
	// padding: 37px 0;
	// padding-bottom: $sidebarControlsHeight;
	position: relative;
	transition: left 0.3s;
	left: 0;
	h3 {
		padding: 0 40px;
		font-size: 20px;
		margin-bottom: 20px;
		// font-weight: $gameHeadingsFontWeight;
		font-weight: 300;
		@media ( max-width: $breakTablet ) {
			display: none;
		}
		svg {
			width: 30px;
			height: 30px;
			float: right;
			fill: $white75;
			margin-top:-6px;
			margin-right:-8px;
		}
	}
	ul {
		margin: 20px 0 0;
	}
	ul li {
		transition: color 0.2s;
		padding: 15px 40px;
		font-size: 14px;
		font-weight: 200;
		position: relative;
		height: 48px;
		overflow: hidden;
		min-width: 0;
		text-align: left;
		@media ( max-width: $breakTablet ) {
			left: -24px;
			text-align: center;
			height: 30px;
		}
	}
	ul li.me {
		background: linear-gradient( 90deg, rgba(255,255,255,0.1) 0%, transparent 100%) repeat scroll 0% 0%;
		font-weight: 600;
		transition: color 0.2s;
	}
	ul li.me span { font-weight: 600; }
	ul li span {
		position: absolute; right: 40px;
		font-weight: 300;
		transition: color 0.2s;
	}
	ul li:hover {
		cursor: pointer;
		color: $orangeLit;
	}
	ul li:hover span {
		color: $orangeLit;
	}
	ul li.opt {
		background: none;
		width: 100%;
		height: auto;
		padding: 5px 40px 30px;
		font-size: 15px;
		white-space: normal;
		position: relative;
		span {
			display: block;
			position: absolute;
			bottom: 2px;
			padding-bottom: 6px;
			left: 40px;
			white-space: nowrap;
			border-bottom: 1px solid $grey3;
		}
	}
	ul li.opt:last-child {
		padding-bottom: 50px;
		span {
			bottom: 28px;
			padding-bottom: 0;
			border-bottom: 0;
		}
	}
	ul li.opt:hover, ul li.opt:hover span {
		cursor: default;
		color: inherit;
	}
	.ui-options {
		margin: 0;
	}
	.tse-content {
		padding: 30px 0 0;
	}
}

// Game elements
.game {
	height: 100%;
	padding: 0 0 0 $sidebarWidth;
	@media ( max-width: $breakTablet ) {
		padding-left: $sidebarWidthMobile;
	}
	.inner {
		background: $dark;
		background: linear-gradient(160deg, #444 0%, #2c2c2c 10%, #252525 20%, #202020 30%, #252525 100%) repeat scroll 0% 0%;
		// background: linear-gradient(-5deg, #04163D 0%, #37AED7 93%);
		padding: $gameEdgePadding;
		// white-space: nowrap;
		display: flex;
		@media ( max-width: $breakMobile ) {
			flex-direction: column;
		}
		align-content: stretch;
		height: 100%;
		.col {
			text-align: center;
			display: inline-block;
			height: 100%;
			vertical-align: top;
			height: 100%;
			// border-right: 1px solid $grey2;
			flex: 2 1;
		}
		.col.left {
			transition: max-width 0.3s;
			max-width: 30%;
			text-align: center;
		}
		.col.center {
			flex: 3 1;
			max-width: $boardSize;
			min-width: $boardSize;
			// The width of this may be set by vue depending on board size
			// But we want to override that with !important on small viewports
			@media( max-width: $breakMobile )
			{
				min-width: 100% !important;
				max-width: 100% !important;
				width: 100% !important;
			}
		}
	}
	h2 { margin: 0 0 20px 0; }
	h2, h2 span { font: $gameHeadingsFontWeight 24px/28px $fontStack; }
	h2 span { float: right; }

	.remaining {
		@media( max-width: $breakMobile )
		{
			display: none;
		}
		height: 100%;
		display: flex;
		flex-direction: column;
		justify-content: center;
		h2 span {
			float: none;
		}
		.list {
			// margin-bottom: 5%;
			// min-height: $boardSize;
			margin: 0 auto;
			overflow: hidden;
			transition: width 0.3s, opacity 0.3s;
			ul {
				display: inline-block; vertical-align: top;
				min-height: 225px;
				display: inline-block;
				display: inline-flex;
				flex-direction: column;
				justify-content: center;
				position: relative;
			}
			.lengths {
				padding-top: 20px;
				padding-right: 10px;
				border-right: 1px solid $white30;
				text-align: right;
				li {
					padding: 7px 0 0 0;
					font: 600 15px/21px $fontStack;
				}
				li:first-child {
					font-weight: 200;
					padding: 0;
					position: absolute; top: 0; right: 10px;
				}
			}
			.counts {
				padding-top: 20px;
				padding-left: 4px;
				text-align: left;
				li {
					padding: 7px 0 0 0;
					font: 300 15px/21px $fontStack;
				}
				li:first-child {
					font-weight: 200;
					padding: 0;
					position: absolute; top: 0; left: 5px;
				}
			}
		}
	}
	.remaining-num {
		margin-left: 5px; 
		// padding-left: 10px;
		// border-left: 1px solid $grey3;
	}

	.found {
		height: 100%;
		display: flex;
		flex-direction: column;
		justify-content: center;
		padding: $foundTopPadding $sidebarPadding*1.5 $foundTopPadding*1.3;
		@media ( max-width: $breakMobile )
		{
			padding-top: 0;
		}
		text-align: left;
		h2 {
			height: 25px;
			overflow: hidden;
		}
		.found-num { 
			color: $white;
			font-size: 27px;
			font-weight: 500;
			transition: color 0.3s;
		}
		// .found-percentage { color: $teal; }
		.found-section { margin-bottom: 15px; }
		.found-section:last-child { margin: 0; }
		.found-section h4 {
			height: 20px;
			overflow: hidden;
			border-bottom: 1px solid $white20;
			margin: 0 0 8px 0;
			padding-bottom: 2px;
			line-height: 20px;
		}
		.found-section h4, .found-section h4 span { 
			font: 400 14px/20px $fontStack;
			color: $white;
		}
		.found-section h4 span {
			color: $grey3;
		}
		.found-section h4 span {
			float: right;
		}
		.found-section ul {
			margin-left: -4px;
		}
		.found-section ul li {
			font-size: 16px;
			font-weight: 300;
			margin-right: 0px;
			padding: 0 5px;
			font-weight: 300;
			text-transform: capitalize;
		}
		.found-section ul li:last-child:after {
			content: ""; display: none;
		}
		.found-section ul li:after {
			content: ",";
			position: relative;
		}
		.found-section ul li:last-child {
			margin-right: 0;
		}
	}

	// solution verison of found words
	.found.solution {
		display: block;
		max-height: 100%;
		overflow-y: scroll;
		box-sizing: border-box;
		.found-section ul li {
			// border-radius: 2px;
			// padding: 0 2px;
			font-weight: 300;
			font-size: 14px;
			color: $white50;
			background: transparent;
			transition: background 0.2s, color 0.2s;
		}
		.found-section ul li.found-word {
			color: $white;
			font-weight: 500;
		}
		.found-section ul li.found-unique {
			color: $orangeLit;
			font-weight: 500;
		}
		.found-section ul li.found-highlight, .found-section ul li:hover {
			transition: background 0.05s, color 0.05s;
			color: $grey;
			background: $green;
			cursor: pointer;
		}
		.found-section:last-child {
			margin-bottom: 60px;
		}
		.solution-found-count {
			float: none;
			margin-left: 10px;
			font-size: 20px;
			color: $white50;
		}
	}

	.remaining-percentage, .found-percentage {
		font-size: 18px;
		margin-left: 5px;
	}

	.game-center {
		padding: 70px 0 50px;
		height: 100%;
		display: flex;
		flex-direction: column;
		// align-content: space-between;
		justify-content: space-around;
		.hud {
			max-height: 33%;
			.round-ended, .round-starts, .round-starts-timer {
				color: $white;
			}
			.round-starts {
				font-size: 18px;
			}
			.timer, .round-starts-timer {
				margin-bottom: 0;
				font-weight: 400;
			}
			h2 {
				margin-top: 5px;
				font-size: 30px;
				line-height: 37px;
			}
			h3 {
				font: 200 24px/28px $fontStack;
			}
			h4 {
				font: 200 16px/22px $fontStack;
				color: $frost;
			}
			.timer, .timer-label, .round-starts, .round-starts-timer, .score {
				// These are all disabled to start with until the game state is started
				// This is now done with vue's v-if directive and not css class
				// display: none;
			}
			.place-wrapper {
				margin: 5px 0 10px;
			}
			.place {
				width: 0px;
				display: inline-block;
				white-space: nowrap;
				position: relative;
				left: 10px;
				font-size: 20px;
				color: $grey3;
			}
			.waiting-to-start {
				font: 300 18px/20px $fontStack;
				text-transform: none;
				color: $white;
				// margin-top: 50px;
			}
		}
		.word {
			max-height: 33%;
			position: relative;
			// top: -8%;
			input[type="text"] {
				@include textInput(22px, 6px);
				border: 0;
				font-weight: 300;
				text-align: center;
				text-transform: uppercase;
				padding: 6px 0 0 0;
				background: $darkTransp5;
				color: $white50;
			}
			input[type="text"]:focus {
				color: $white;
				font-style: normal;
			}
			h3 {
				text-align: left;
				margin-top: 15px;
				font-weight: 300;
				color: $white50;
				position: relative;
				top: -10px;
				opacity: 0;
				transition: top 0.2s, opacity 0.2s;
				span {
					font-weight: 300;
					font-size: 22px;
					color: $white50;
					float: right;
				}
				.word-points {
					position: absolute;
					right: 0;
					top: 18px;
					font-size: 11px;
				}
			}
			h3.typing {
				opacity: 1;
				top: 0px;
			}
		}
	}

}
