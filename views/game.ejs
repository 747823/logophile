<!DOCTYPE html>
<html>
	<head>
		<title>Logophile | Game</title>
		<meta name="description" content="Logophile is a free multiplayer word game inspired by boggle.">
		<% include partials/metatags.ejs %>
		<% include partials/assets.ejs %>
	</head>
	<body>
		<% include partials/popup.ejs %>
		<% include partials/menu-bar.ejs %>
		<% include partials/share.ejs %>
		<% include partials/sidebar.ejs %>
		<div class="game">
			<div class="inner" id="game-inner" 
				v-on:touchstart="touchstart($event)" 
				v-on:touchmove="touchmove($event)" 
				v-on:mousemove="touchmove($event)">

				<div class="col left" v-bind:style="{ maxWidth: leftColWidth }">
					<div class="remaining">
						<div class="list nowrap" v-if="gameData.game.roundStarted">
							<h2>Remaining:</h2>
								<%#
									I think the following takes up too much space, but I'll leave it commented in case we decide to add it again:
									<span class="remaining-num">95</span>
									<span class="remaining-percentage">(90%)</span>
								%>
							<div>
								<ul class="lengths">
									<li>length</li>
									<li v-for="len in userRemainingCountKeys">[[len]]</li>
									<!-- <ul class="counts">
										<li>count</li>
										<li v-for="len in userRemainingCountKeys">[[userRemainingCount[len]]]</li>
									</ul> -->
								</ul>
							</div>
						</div>
					</div>
				</div>

				<div class="col center" v-bind:style="{ minWidth: boardpx+'px', maxWidth: boardpx+'px' }">
					<div class="game-center">
						<div class="hud" id="hud" 
							v-bind:class="{'alignLeft': !gameData.game.roundStarted && gameData.game.rounds > 0 }">
							<div class="time-wrapper" v-if="gameData.game.initd && gameData.game.roundStarted">
								<h2 class="timer">
									<div>Round [[gameData.game.rounds]] started:</div>
									[[ gameData.game.timeLimit - gameData.game.roundTime | time 'ceil' ]]
								</h2>
							</div>
							<div v-if="gameData.game.initd && !gameData.game.roundStarted && gameData.game.rounds > 0">
								<p>Round [[gameData.game.rounds]] ended</p>
							</div>
							<div class="place-wrapper" v-if="gameData.game.initd && gameData.game.rounds > 0">
								<h3 class="score">
									Score: [[userData.score]]
									<span class="place">[[place]]</span>
								</h3>
								<%# <h4 class="place">Place [[place]] / [[gameData.users.playing.length]]</h4> %>
							</div>

							<div v-if="gameData.game.initd && !gameData.game.roundStarted">
								<p class="round-starts">
									Next round starts in: [[ gameData.game.pauseTimeLimit - gameData.game.pauseTime | time 'ceil' ]]
								</p>
								<%# <h2 class="round-starts-timer">[[ gameData.game.pauseTimeLimit - gameData.game.pauseTime | time 'ceil' ]]</h2> %>
							</div>

							<h2 class="waiting-to-start" v-if="!gameData.game.initd">Waiting to start first round</h2>
							<a href="#" class="button" v-if="!gameData.game.initd" v-on:click="startGame()">
								<%- locals.svg['play.svg'] %> Start Game
							</a>
						</div>

						<div class="board" 
							v-bind:class="{'active': gameData.game.roundStarted || gameData.game.rounds < 0}"
							v-bind:style="{
								height: boardpx+'px',
								width: boardpx+'px',
								minHeight: boardpx+'px',
								maxHeight: boardpx+'px' 
							}">
							<div class="row" 
								v-bind:style="{height: 100 / gameData.game.board.length+'%'}"
								v-for="x in gameData.game.board">
								<div v-for="y in gameData.game.board[$index]"
									track-by="$index"
									v-bind:style="{ width: 100/gameData.game.board.length+'%' }"
									v-bind:class="{
										'cell': true,
										'alt': false,
										'on': this.boardHighlighted[$parent.$index][$index].highlight == 'on',
										'partial': this.boardHighlighted[$parent.$index][$index].highlight == 'partial'
									}">
									<div class="letter"
										v-bind:style="{fontSize: boardpx*0.5/gameData.game.board.length + 'px'}">
										[[ gameData.game.board[$parent.$index][$index].letter ]]
									</div>
								</div>
							</div>
						</div>

						<div class="word">
							<input type="text" 
								value="type here"
								v-model="wordToCheck"
								v-on:keydown.enter="submit($event)" 
								v-on:keydown.space.prevent="submit($event)" 
								v-on:keydown="wordInputDown($event)" 
								v-on:keyup="wordInputUp($event)"
								v-on:focus="wordInputFocus($event)"
								v-on:blur="wordInputBlur($event)">
							<h3>
								[[inputlength]] Letters
								<span class="word-score">
									+[[inputscore]] <span class="word-points">points</span>
								</span>
							</h3>
						</div>
					</div>
				</div>

				<div class="col right" v-if="gameData.game.initd && gameData.game.rounds > 0">
					<div v-if="gameData.game.roundStarted" class="found">
						<h2>
							Found Words
							<span class="found-num">
								[[ foundNum ]]
								<span class="found-percentage">([[foundPercentage]]%)</span>
							</span>
						</h2>
						<div class="found-section" v-for="len in userWordsSortedKeys">
							<h4>[[len]] Letters</h4>
							<ul class="inline">
								<li v-for="word in userWordsSorted[len]">[[$key.toLowerCase()]]</li>
							</ul>
						</div>
					</div>
					<div v-else class="found solution">
						<h2> 
							Solution 
							<span class="solution-found-count">( Found [[ foundNum ]] of [[ solutionLength ]] )</span>
						</h2>
						<div class="found-section" v-for="len in solutionSortedKeys">
							<h4>[[len]] Letters</h4>
							<ul class="inline">
								<li v-for="word in solutionSorted[ len ]"
									v-on:mouseover="this.wordToHighlight = $key"
									v-on:mouseout="this.wordToHighlight = '' "
									v-bind:class="{ 'found-word': !!userData.words[ $key ], 'found-unique': false }">[[$key.toLowerCase()]]
								</li>
							</ul>
						</div>
					</div>
				</div>

			</div>
		</div>
		<% include partials/footer-assets.ejs %>
	</body>
</html>
